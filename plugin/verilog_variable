#!/bin/fish
set input_file $argv[1]
set line_number $argv[2]
touch tmp_module_name
touch tmp_variable
#爬取光标所在模块中的变量
set target_line (sed -n "$line_number p" $input_file)
set start_line (sed -n "1,$line_number p" $input_file | tac | grep -m 1 -n 'module' | cut -d: -f1)
set end_line (sed -n "$line_number,\$ p" $input_file | grep -m 1 -n 'endmodule' | cut -d: -f1)

if test -n "$start_line" -a -n "$end_line"
    set start_line (math $line_number - $start_line + 1)
    set end_line (math $line_number + $end_line - 1)
    sed -n "$start_line,$end_line p" $input_file\
    | awk '/module/{flag=1;next} /endmodule/{flag=0} flag' \
    | grep -E '^\s*(inout|input|output|reg|wire)' \
    | sed -E 's/(inout|input|output|reg|wire)//g' \
    | sed -E 's/^\s*\/\*.*\*\///g'\
    | sed -E 's/(\[.*\])//g' \
    | sed -E 's/^\s*(inout|input|output|reg|wire)//g' \
    | tr -s ';,' '\n' \
    | awk '{print $1}' \
    | sort \
    | sed -E 's/^\s*\/\*.*\*\///g' \
    | uniq -c \
    | awk '{print $2}'>tmp_variable
     
    #爬取参数
    sed -n "$start_line,$end_line p" $input_file\
    | awk '/module/{flag=1;next} /endmodule/{flag=0} flag' \
    | grep -E '^\s*(parameter)' \
    | sed -E 's/(parameter)//g' \
    | sed -E 's/=\s*(.*)\s*(,|;)/\/ value = \1 -PARAMETER-\ \//g' \
    | sed -E 's/ //g' \
    | tr -s ';,[]' '\n' \
    | awk '{print $1}' \
    | sort \
    | uniq -c \
    | awk '{print $2}'>>tmp_variable

    #爬取多端口变量
    sed -n "$start_line,$end_line p" $input_file\
    | awk '/module/{flag=1;next} /endmodule/{flag=0} flag'\
    | grep -E '^\s*(inout|input|output|reg|wire)' \
    | sed -E 's/(inout|input|output|reg|wire)//g' \
    | sed -E 's/^\s*\/\*.*\*\///g'\
    | sort | awk '{$1=$1}1' \
    | grep '\[' | sed -E 's/\[.*\]//g' \
    | sed -E 's/( )+//g' \
    | sed -E 's/(^[A-Za-z$0-9_]+)/\1[:]/g' \
    | tr -s ',;' '\n'>>tmp_variable

    #爬取模块名称
    sed -n "$start_line p" $input_file\
        | sed -E 's/^\s*module\s*(\w+)\s*(\()?/\1/g'>>tmp_module_name
else
cat $input_file \
    | awk '/module/{flag=1;next} /endmodule/{flag=0} flag' \
    | grep -E '^\s*(inout|input|output|reg|wire)' | sed -E 's/(inout|input|output|reg|wire)//g' \
    | sed -E 's/(\[.*\])//g' \
    | tr -s ';,[]' '\n' \
    | awk '{print $1}' \
    | sort \
    | sed -E 's/^\s*\/\*.*\*\///g'\
    | uniq -c \
    | awk '{print $2}'>tmp_variable

cat $input_file \
     | awk '/module/{flag=1;next} /endmodule/{flag=0} flag' \
     | grep -E '^\s*(inout|input|output|reg|wire)' \
     | sed -E 's/(inout|input|output|reg|wire)//g' \
     | sort | awk '{$1=$1}1' \
     | grep '\[' | sed -E 's/\[.*\]//g' \
     | sed -E 's/( )+//g' \
     | sed -E 's/([A-Za-z$_0-9]+)/\1[:]/g' \
     | tr -s ',;' '\n'>>tmp_variable
end
